---

- name: Read the fetched SSH key into a variable
  ansible.builtin.set_fact:
    ssh_key_content: "{{ lookup('file', './tmp/ceph_ssh.pub') }}"

- name: Append SSH public key to authorized_keys
  ansible.builtin.lineinfile:
    path: /root/.ssh/authorized_keys
    line: "{{ ssh_key_content }}"
    state: present
    owner: root
    group: root
    mode: '0600'

- name: Check if the host is already part of the Ceph cluster
  ansible.builtin.shell: |
    ceph orch host ls --format json | jq -r '.[].hostname'
  register: ceph_current_hosts
  delegate_to: "{{ groups['mons'] | first }}"
  run_once: true

- name: Set fact for whether the host is in the Ceph cluster
  ansible.builtin.set_fact:
    host_in_cluster: "{{ inventory_hostname in ceph_current_hosts.stdout_lines }}"

- name: Add new hosts as MGRs
  ansible.builtin.command:
    cmd: ceph orch host label add {{ inventory_hostname }} {{ service_label }}
  delegate_to: "{{ groups['mons'] | first }}"
  when: host_in_cluster

- name: Check current MGR placement state
  ansible.builtin.shell:
    ceph orch ls --format json | jq -r '.[] | select(.service_name | test("mgr")) | .placement.count'
  register: current_mgr_placement
  changed_when: false
  run_once: true
  delegate_to: "{{ groups['mons'] | first }}"

- name: Set mgr applied only on mgr hosts
  ansible.builtin.command:
    cmd: 'ceph orch apply mgr --placement="{{ replica_count }} label:{{ service_label }}"'
  when:
    - current_mgr_placement.stdout != '3'
  delegate_to: "{{ groups['mons'] | first }}"


################################### DASHBOARD CONFIG #########################


- name: Ensure Dashboard be enabled
  ansible.builtin.command:
    cmd: ceph mgr module enable dashboard
  delegate_to: "{{ groups['mons'] | first }}" 

- name: Check Error Status code
  ansible.builtin.shell:
    ceph config get mgr mgr/dashboard/standby_error_status_code
  register: default_error_code
  delegate_to: "{{ groups['mons'] | first }}"

- name: Set fact the error status code
  ansible.builtin.set_fact:
    current_error_code: "{{ default_error_code.stdout }}"
  delegate_to: "{{ groups['mons'] | first }}"

- name: Set new error status code
  ansible.builtin.command:
    cmd: ceph config set mgr mgr/dashboard/standby_error_status_code 503
  delegate_to: "{{ groups['mons'] | first }}"
  when: current_error_code != "503"


################################### BALANCER CONFIG ##########################

# as default the Balancer is on

# set max misplaced for PG from default 5% to 7%

- name: Check default value of Max_Misplaced
  ansible.builtin.command:
    cmd: ceph config get mgr target_max_misplaced_ratio
  register: default_max_misplaced
  delegate_to: "{{ groups['mons'] | first }}"

- name: Set fact default Max_Misplaced
  ansible.builtin.set_fact:
    current_misplaced: "{{ default_max_misplaced.stdout }}"
  delegate_to: "{{ groups['mons'] | first }}"

- name: Set MGR PGs Max_Misplaced to 7%
  ansible.builtin.command:
    cmd: ceph config set mgr target_max_misplaced_ratio .07
  delegate_to: "{{ groups['mons'] | first }}"
  when: current_misplaced != "0.070000"


# set upmap be the balancer mode

- name: Check default value of balancer mode
  ansible.builtin.shell:
    ceph balancer status | jq -r '.mode'
  register: default_balancer_mode
  delegate_to: "{{ groups['mons'] | first }}"

- name: Set fact default balancer mode
  ansible.builtin.set_fact:
    current_balancer_mode: "{{ default_balancer_mode.stdout }}"
  delegate_to: "{{ groups['mons'] | first }}"

- name: Set Balancer mode to upmap
  ansible.builtin.command:
    cmd: ceph balancer mode upmap
  when: current_balancer_mode != "upmap"
  delegate_to: "{{ groups['mons'] | first }}" 


# set sleep interval for mgr/balancer

- name: Check default value of sleep interval
  ansible.builtin.shell:
    ceph config get mgr mgr/balancer/sleep_interval
  register: default_sleep_interval
  delegate_to: "{{ groups['mons'] | first }}"

- name: Set fact default sleep interval
  ansible.builtin.set_fact:
    current_sleep_interval: "{{ default_balancer_mode.stdout }}"
  delegate_to: "{{ groups['mons'] | first }}"

- name: Set desire value for sleep interval
  ansible.builtin.command:
    cmd: ceph config set mgr mgr/balancer/sleep_interval {{ sleep_time }}
  delegate_to: "{{ groups['mons'] | first }}"

################################### PG_AUTOSCALER CONFIG #####################


- name: Ensure the autoscaling be on for all pools
  ansible.builtin.command:
    cmd: ceph config set global osd_pool_default_pg_autoscale_mode on
  delegate_to: "{{ groups['mons'] | first }}"

- name: Check PG per Pools Values
  ansible.builtin.shell:
    ceph config get mon mon_target_pg_per_osd
  register: default_pg_pool
  delegate_to: "{{ groups['mons'] | first }}"

- name: Set fact the PG per Pools
  ansible.builtin.set_fact:
    current_pg_pool: "{{ default_pg_pool.stdout }}"
  delegate_to: "{{ groups['mons'] | first }}"

- name: Change PG per Pools
  ansible.builtin.command:
    cmd: ceph config set global mon_target_pg_per_osd {{ desire_pg_pool }}
  delegate_to: "{{ groups['mons'] | first }}"

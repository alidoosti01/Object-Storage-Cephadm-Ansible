---

- name: Read the fetched SSH key into a variable
  set_fact:
    ssh_key_content: "{{ lookup('file', './tmp/ceph_ssh.pub') }}"

- name: Append SSH public key to authorized_keys
  ansible.builtin.lineinfile:
    path: /root/.ssh/authorized_keys
    line: "{{ ssh_key_content }}"
    state: present
    owner: root
    group: root
    mode: '0600'

- name: Check if the host is already part of the Ceph cluster
  ansible.builtin.shell: |
    ceph orch host ls --format json | jq -r '.[].hostname'
  register: ceph_current_hosts
  delegate_to: "{{ groups['mons'] | first }}"
  run_once: true

- name: Set fact for whether the host is in the Ceph cluster
  set_fact:
    host_in_cluster: "{{ inventory_hostname in ceph_current_hosts.stdout_lines }}"

- name: Add the Host to the CEPH Cluster
  ceph.automation.ceph_orch_host:
    name: "{{ inventory_hostname }}"
    address: "{{ hostvars[inventory_hostname].ansible_facts['eth1']['ipv4']['address'] }}"
    labels:
      - "{{ service_label }}"
  delegate_to: "{{ groups['mons'] | first }}" 
  when: not host_in_cluster

- name: Check rgw is active
  shell:
    ceph orch ls --format json | jq -r '.[].service_name'
  register: rgw_service
  delegate_to: "{{ groups['mons'] | first }}"
  changed_when: false
  run_once: true

- name: Applying the RGW service
  block:
    - name: Apply RGW service
      ceph.automation.ceph_orch_apply:
        spec: |
          service_type: rgw
          service_id: "{{ rgw_service_name }}"
          placement:
            label: rgw
      when: "'rgw.{{ rgw_service_name }}' not in rgw_service.stdout_lines"
      delegate_to: "{{ groups['mons'] | first }}"

    - name: Pause for clsuter to setup the RGWs
      pause:
        seconds: 20

    - name: Create Erasure Code profile
      ceph.automation.ceph_ec_profile:
        name: "{{ ecp_name }}"
        k: 2
        m: 1
        state: present
        crush_failure_domain: host
      delegate_to: "{{ groups['mons'] | first }}"

    - name: Ensure the ecp was created
      ansible.builtin.command:
        cmd: ceph osd erasure-code-profile get {{ ecp_name }}
      register: new_ecp
      delegate_to: "{{ groups['mons'] | first }}"

    - name: Details of new ecp
      debug:
        msg: "{{ new_ecp.stdout_lines }}"
      delegate_to: "{{ groups['mons'] | first }}"

    - name: Pause for RGW service be available
      ansible.builtin.pause:
        seconds: 620

    - name: Get RGW data_pool name
      ansible.builtin.shell:
        radosgw-admin zone get | jq -r '.placement_pools[].val.storage_classes.STANDARD.data_pool'
      register: rgw_data_pool_name
      delegate_to: "{{ groups['mons'] | first }}"

    - name: Data pool set fact
      set_fact:
        data_pool_name: "{{ rgw_data_pool_name.stdout_lines[0] }}"
      delegate_to: "{{ groups['mons'] | first }}"

    - name: Create rgw data pool with erasure code profile
      ansible.builtin.command:
        cmd: ceph osd pool create {{ data_pool_name }} erasure {{ ecp_name }}
      delegate_to: "{{ groups['mons'] | first }}"

    - name: Enable RGW application on new pool
      ansible.builtin.command:
        cmd: ceph osd pool application enable {{ data_pool_name }} {{ service_label }}
      delegate_to: "{{ groups['mons'] | first }}"
  when: "'rgw.{{ rgw_service_name }}' not in rgw_service.stdout_lines"